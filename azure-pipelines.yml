# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: Ubuntu_16_04_x64
  timeoutInMinutes: 90
  pool:
    vmImage: ubuntu-16.04
  variables:
    compiler: gxx_linux-64=7.2.0
    boost_version: 1.67.0
    number_of_cores: nproc
    python_name: python37
  steps:
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  - bash: |
      source ${CONDA}/etc/profile.d/conda.sh
      sudo chown -R ${USER} ${CONDA}
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda info -a
      conda create --name rdkit_build $(compiler) cmake \
          boost-cpp=$(boost_version) boost=$(boost_version) \
          py-boost=$(boost_version) libboost=$(boost_version) \
          numpy matplotlib pillow eigen pandas \
          sphinx recommonmark jupyter
      conda activate rdkit_build
      conda install -c rdkit nox cairo
    displayName: Setup build environment
  - bash: |
      source ${CONDA}/etc/profile.d/conda.sh
      conda activate rdkit_build
      mkdir build && cd build && \
      cmake .. \
      -DCMAKE_BUILD_TYPE=Release \
      -DRDK_INSTALL_INTREE=ON \
      -DRDK_INSTALL_STATIC_LIBS=OFF \
      -DRDK_BUILD_CPP_TESTS=ON \
      -DRDK_BUILD_PYTHON_WRAPPERS=ON \
      -DRDK_USE_BOOST_REGEX=ON \
      -DRDK_BUILD_COORDGEN_SUPPORT=ON \
      -DRDK_OPTIMIZE_POPCNT=ON \
      -DRDK_BUILD_TEST_GZIP=ON \
      -DRDK_BUILD_FREESASA_SUPPORT=ON \
      -DRDK_BUILD_AVALON_SUPPORT=ON \
      -DRDK_BUILD_INCHI_SUPPORT=ON \
      -DRDK_BUILD_CAIRO_SUPPORT=ON \
      -DRDK_BUILD_SWIG_WRAPPERS=OFF \
      -DRDK_SWIG_STATIC=OFF \
      -DRDK_BUILD_THREADSAFE_SSS=ON \
      -DRDK_TEST_MULTITHREADED=ON \
      -DBoost_NO_SYSTEM_PATHS=ON \
      -DRDK_BOOST_PYTHON3_NAME=$(python_name) \
      -DPYTHON_EXECUTABLE=${CONDA_PREFIX}/bin/python3 \
      -DCMAKE_INCLUDE_PATH="${CONDA_PREFIX}/include" \
      -DCMAKE_LIBRARY_PATH="${CONDA_PREFIX}/lib"
    displayName: Configure build (Run CMake)
  - bash: |
      source ${CONDA}/etc/profile.d/conda.sh
      conda activate rdkit_build
      cd build
      make -j $( $(number_of_cores) ) install
    displayName: Build
  - script: |
      pip install pytest
      pip install pytest-cov
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
    displayName: 'Test with pytest'
